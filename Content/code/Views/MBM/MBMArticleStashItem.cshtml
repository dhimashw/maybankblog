@using Sitecore.Feature.Content
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Mvc.Presentation
@using Sitecore.Mvc
@using Sitecore.Foundation.Dictionary.Extensions
@model Sitecore.Feature.Library.Helper.PagedData<Sitecore.Data.Items.Item>


<div class="row">
    @if (Model != null && Model.Data != null)
    {
        string urlFile, targetWindow = string.Empty;
        foreach (Sitecore.Data.Items.Item item in Model.Data)
        {
            urlFile = "#";
            targetWindow = string.Empty;

            if (item.Fields[Sitecore.Feature.Library.Templates.BaseField.Fields.OpenNewBrowser] != null && item.Fields[Sitecore.Feature.Library.Templates.BaseField.Fields.OpenNewBrowser].ToString() == "1")
            {
                targetWindow = "target=\"_blank\"";
            }

            if (item.Fields[Sitecore.Feature.Library.Templates.BaseField.Fields.FileMBM] != null && item.Fields[Sitecore.Feature.Library.Templates.BaseField.Fields.FileMBM].Value != string.Empty)
            {
                Sitecore.Data.Fields.FileField field = (Sitecore.Data.Fields.FileField)item.Fields[Sitecore.Feature.Library.Templates.BaseField.Fields.FileMBM];
                if (field.MediaItem != null)
                {
                    urlFile = Sitecore.Resources.Media.MediaManager.GetMediaUrl(field.MediaItem);
                }
            }
            else
            {
                urlFile = item.Url();
            }

            string categoryTitle = string.Empty;
            if (item.Fields[item.Fields[Sitecore.Feature.Library.Templates.BaseField.Fields.CategoryArticleMBM].ID] != null && item.Fields[item.Fields[Sitecore.Feature.Library.Templates.BaseField.Fields.CategoryArticleMBM].ID].ToString().Trim().Length > 37)
            {
                Sitecore.Data.Items.Item itemCategory = Sitecore.Context.Database.GetItem(item.Fields[item.Fields[Sitecore.Feature.Library.Templates.BaseField.Fields.CategoryArticleMBM].ID].ToString());
                categoryTitle = itemCategory.Fields[Sitecore.Feature.Library.Templates.GeneralValue.Fields.Title].ToString();
            }

            <div class="col-xs-12 col-xs-6@landscape col-sm-4 my-3">
                <div class="skeleton js-demo-skeleton my-3">
                    <div class="skeleton__img"></div>
                    <div class="skeleton__body">
                        <div class="skeleton__line"></div>
                        <div class="skeleton__line half"></div>
                    </div>
                </div>
                <div class="card js-demo-skeleton-content hide">
                    <div class="card__header">
                        <div class="card__img">
                            <a href="@urlFile" @targetWindow>
                                <img class="img-responsive" src="@item.ImageUrl(Sitecore.Feature.Library.Templates.BaseField.Fields.Thumbnail)" alt="" />
                            </a>
                        </div>
                    </div>
                    <div class="card__body">
                        <div class="pt-3 color-gold">
                            <h4 class="yellow-text">@categoryTitle</h4>
                        </div>
                        <a href="@urlFile" @targetWindow class="blackhref">
                            <h3 class="card__title js-truncate" data-truncate="48">
                                @Html.Sitecore().Field(Sitecore.Feature.Library.Templates.BaseField.Fields.Title, item)
                            </h3>
                        </a>
                    </div>
                </div>
            </div>
        }
    }
</div>



@if (Model != null && Model.Data != null)
{
    <!-- PAGINATION COMPONENT -->
    @Html.Partial("~/Views/Pagination/_Pagination.cshtml", Model)
}
