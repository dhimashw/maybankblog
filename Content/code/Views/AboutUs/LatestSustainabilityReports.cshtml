@using Sitecore.Mvc
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Feature.Library;
@using Sitecore.Foundation.Alerts
@using Sitecore.Foundation.Alerts.Extensions
@using Sitecore.Data.Items
@model Sitecore.Feature.Library.Helper.PagedData<Sitecore.Data.Items.Item>
@{
    string urlFile = string.Empty;
}
@foreach (Item item in Model.Data)
{
    if (item.Fields[Sitecore.Feature.Library.Templates.BaseField.Fields._File].Value != string.Empty)
    {
        Sitecore.Data.Fields.FileField field = (Sitecore.Data.Fields.FileField)item.Fields[Sitecore.Feature.Library.Templates.BaseField.Fields._File];
        if (field.MediaItem != null)
        {
            urlFile = Sitecore.Resources.Media.MediaManager.GetMediaUrl(field.MediaItem);
        }

    }
    <div class="col col-xs-12 col-lg-4 col-sm-12 col-md-4 js-mobile-to-carousel-list">
        <div class="story-card">
            <div class="image">
                <a href="@urlFile">
                    @Html.Sitecore().ImageField(Sitecore.Feature.Library.Templates.BaseField.Fields.Image, item)
                </a>
            </div>
            <div class="title">
                @*<h4 class="yellow-text">
                    @Html.Sitecore().Field(Sitecore.Feature.Library.Templates.CSREventItem.Fields.Category, item)
                </h4>*@
                <h2><a href="@urlFile">@Html.Sitecore().Field(Sitecore.Feature.Library.Templates.BaseField.Fields.Title, item)</a></h2>
            </div><a class="card-link" href=""></a>
        </div>
    </div>
}