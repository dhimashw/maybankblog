@using Sitecore.Feature.Content
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Data.Items
@using Sitecore.Feature.Content.Repositories
@using Sitecore.Mvc.Presentation
@using Sitecore.Foundation.Indexing.Repositories;
@using Sitecore.Mvc
@using Sitecore.Foundation.Dictionary.Extensions
@model Sitecore.Feature.Library.Helper.PagedData<Sitecore.Data.Items.Item>

@{
    ISearchServiceRepository searchServiceRepository = new SearchServiceRepository();

    ReportsRepository rp = new ReportsRepository(searchServiceRepository);
    string urlFile = string.Empty;
    string yearCategory = Request.QueryString[Sitecore.Feature.Library.Helper.Variables._categoryId] != null ? Request.QueryString[Sitecore.Feature.Library.Helper.Variables._categoryId].ToLower() : string.Empty;

    if (string.IsNullOrEmpty(yearCategory))
    {
        Item defaultItem = Sitecore.Context.Database.GetItem(new Sitecore.Data.ID(Sitecore.Feature.Library.Helper.Variables._defaultTabRUPSReport));
        var elements = Sitecore.Feature.Library.Helpers.LibraryHelpers.GetDynamicMultiList(defaultItem);
        if (elements.Count() > 0)
        {
            yearCategory = elements.Select(x => x.ID).FirstOrDefault().ToString().Replace("-", "");
        }
    }

    IEnumerable<string> Category = rp.DistincRUPSCategory(Model.Data, yearCategory);
}

<div class="row">
    <div class="col-lg-12">



        @foreach (string item in Category)
        {
            Item itemTitle = Sitecore.Context.Database.GetItem(new Sitecore.Data.ID(item));
            double resultcount = rp.GetRUPSItemsByYear(Model.DataSourceID.ToString(), item, yearCategory).Count();

            double countRow = Math.Ceiling(resultcount / 3);
            //float generateRow = (countItem % 3);
            //double generateRow = Math.Round(countRow, MidpointRounding.AwayFromZero);
            double generateRow = countRow;
            

            <h3>@Html.Sitecore().Field(Sitecore.Feature.Library.Templates.GeneralValue.Fields.Title, itemTitle)</h3>

            for (int i = 0; i < generateRow; i++)
            {
                <div class="row mb-4">
                @foreach (Item itemReport in rp.GetRUPSItemsByYear(Model.DataSourceID.ToString(), item, yearCategory).Skip(i * 3).Take(3))
                {
                    if (itemReport.Fields[Sitecore.Feature.Library.Templates.BaseField.Fields._File].Value != string.Empty)
                    {
                        Sitecore.Data.Fields.FileField field = (Sitecore.Data.Fields.FileField)itemReport.Fields[Sitecore.Feature.Library.Templates.BaseField.Fields._File];
                        if (field.MediaItem != null)
                        {
                            urlFile = Sitecore.Resources.Media.MediaManager.GetMediaUrl(field.MediaItem);
                        }

                    }

                    <div class="col-xs-12 col-sm-4">
                        <div class="m-cards-info-card--normalize">
                            <a href="@urlFile" target="_blank">
                                <div class="col-xs-1 no-padding">
                                    <div class="info-card__icon">
                                        <img class="img-responsive" src="/assets/img/icons/ico-files-pdf.svg" alt="" />
                                    </div>
                                </div>
                                <div class="col-xs-11">
                                    <div class="info-card__title bold">@itemReport.Fields[Sitecore.Feature.Library.Templates.BaseField.Fields.Title].Value</div>
                                    <div class="info-card__action inline-block pad-top-1">
                                        <div class="valign-center">
                                            <div class="valign-item valign-item--no-h-p">
                                                <img class="img-responsive" src="/assets/img/icons/ico-download-green.svg" alt="" />
                                            </div>
                                            <div class="valign-item valign-item--no-h-p">@Html.Sitecore().Dictionary("/Feature/Content/Download")</div>
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </div>
                    </div>
                }
                </div>
            }

            @*<div class="row mb-4">
                @foreach (Item itemReport in rp.GetRUPSItemsByYear(Model.DataSourceID.ToString(), item, yearCategory))
                {
                    if (itemReport.Fields[Sitecore.Feature.Library.Templates.BaseField.Fields._File].Value != string.Empty)
                    {
                        Sitecore.Data.Fields.FileField field = (Sitecore.Data.Fields.FileField)itemReport.Fields[Sitecore.Feature.Library.Templates.BaseField.Fields._File];
                        if (field.MediaItem != null)
                        {
                            urlFile = Sitecore.Resources.Media.MediaManager.GetMediaUrl(field.MediaItem);
                        }

                    }   
                    
                    <div class="col-xs-12 col-sm-4">
                        <div class="m-cards-info-card--normalize">
                            <a href="@urlFile" target="_blank">
                                <div class="col-xs-1 no-padding">
                                    <div class="info-card__icon">
                                        <img class="img-responsive" src="../../../../assets/img/icons/ico-files-pdf.svg" alt="" />
                                    </div>
                                </div>
                                <div class="col-xs-11">
                                    <div class="info-card__title bold">@itemReport.Fields[Sitecore.Feature.Library.Templates.BaseField.Fields.Title].Value</div>
                                    <div class="info-card__action inline-block pad-top-1">
                                        <div class="valign-center">
                                            <div class="valign-item valign-item--no-h-p">
                                                <img class="img-responsive" src="../../../../assets/img/icons/ico-download-green.svg" alt="" />
                                            </div>
                                            <div class="valign-item valign-item--no-h-p">@Html.Sitecore().Dictionary("/Feature/Content/Download")</div>
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </div>
                    </div>

                }
            </div>*@
        }
    </div>
</div>
