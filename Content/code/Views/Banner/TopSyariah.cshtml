@using Sitecore.Mvc
@using Sitecore.Mvc.Presentation
@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Feature.Library.Helper
@using System.Text.RegularExpressions
@model RenderingModel
@{
    Sitecore.Data.Items.Item itemRegular = null;
    Sitecore.Data.Items.Item itemSyariah = null;
    Sitecore.Data.Items.Item CurrentItemPage = RenderingContext.Current.PageContext.Item;
    string currentPath = CurrentItemPage.Paths.Path.ToString().ToLower();
    /* /sitecore/content/maybank/corporate/home/savings/savingsaccount/maybank-tabungan-ib */

    //CurrentItemPage.Fields[Sitecore.Feature.Library.Templates.TopNav.Fields.AnchorLinks]
    //CurrentItemPage.Fields[Sitecore.Feature.Library.Templates.TopNav.Fields.LabelApplyNow]
    //CurrentItemPage.Fields[Sitecore.Feature.Library.Templates.TopNav.Fields.UrlApplyNow]
    //CurrentItemPage.Fields[Sitecore.Feature.Library.Templates.TopNav.Fields.LabelCalculator]
    //CurrentItemPage.Fields[Sitecore.Feature.Library.Templates.TopNav.Fields.UrlCalculator]
    //CurrentItemPage.Fields[Sitecore.Feature.Library.Templates.TopNav.Fields.ApplyConfigureonTopNav]


    string tagHtmlTopNav = string.Empty;
    string rawAnchorItems = CurrentItemPage.Fields[Sitecore.Feature.Library.Templates.TopNav.Fields.AnchorLinks] != null ? CurrentItemPage.Fields[Sitecore.Feature.Library.Templates.TopNav.Fields.AnchorLinks].Value.Trim() : string.Empty;
    var isShowCTA = CurrentItemPage.Fields[Sitecore.Feature.Library.Templates.TopNav.Fields.ApplyConfigureonTopNav] != null ? CurrentItemPage.Fields[Sitecore.Feature.Library.Templates.TopNav.Fields.ApplyConfigureonTopNav].Value.Trim() : "0";
    string applyNow = "#";// RenderingContext.Current.Rendering.Parameters["Apply Now"] != null ? RenderingContext.Current.Rendering.Parameters["Apply Now"].Trim() : "#";
    string applyCalculator = "#";

    //Apply Button Color

    //string colorValue = CurrentItemPage.Fields[Sitecore.Feature.Library.Templates.TopNav.Fields.ButtonColorApply].Value != null ? CurrentItemPage.Fields[Sitecore.Feature.Library.Templates.TopNav.Fields.ButtonColorApply].Value : string.Empty;
    string ButtonApplyColor = CurrentItemPage.Fields[Sitecore.Feature.Library.Templates.TopNav.Fields.ButtonColorApply].Value;
    string colorValue = string.Empty;
    Sitecore.Data.ID NewButtonID = new Sitecore.Data.ID();
    if (Sitecore.Data.ID.TryParse(ButtonApplyColor, out NewButtonID))
    {
        colorValue = Sitecore.Context.Database.GetItem(ButtonApplyColor).Fields[Sitecore.Feature.Library.Templates.GeneralValue.Fields.Title].Value;
    }

    //Label Button
    string labelButton = CurrentItemPage.Fields[Sitecore.Feature.Library.Templates.TopNav.Fields.LabelApplyNow] != null ? CurrentItemPage.Fields[Sitecore.Feature.Library.Templates.TopNav.Fields.LabelApplyNow].Value : string.Empty;

    //Label Button
    string LabelCalculator = CurrentItemPage.Fields[Sitecore.Feature.Library.Templates.TopNav.Fields.LabelCalculator] != null ? CurrentItemPage.Fields[Sitecore.Feature.Library.Templates.TopNav.Fields.LabelCalculator].Value : string.Empty;



    if (CurrentItemPage.Fields[Sitecore.Feature.Library.Templates.TopNav.Fields.UrlApplyNow] != null)
    {
        Sitecore.Data.Fields.LinkField _link = CurrentItemPage.Fields[Sitecore.Feature.Library.Templates.TopNav.Fields.UrlApplyNow];
        applyNow = Sitecore.Feature.Library.Helper.Core.getGeneralLink(_link);

        //applyNow = CurrentItemPage.Fields[Sitecore.Feature.Library.Templates.TopNav.Fields.UrlApplyNow].Value.Trim();
        //Sitecore.Data.Items.Item itemInternal = Sitecore.Context.Database.GetItem(applyNow);
        //applyNow = itemInternal.Url();
    }

    if (CurrentItemPage.Fields[Sitecore.Feature.Library.Templates.TopNav.Fields.UrlCalculator] != null)
    {
        Sitecore.Data.Fields.LinkField _link = CurrentItemPage.Fields[Sitecore.Feature.Library.Templates.TopNav.Fields.UrlCalculator];
        applyCalculator = Sitecore.Feature.Library.Helper.Core.getGeneralLink(_link);

        //applyCalculator = CurrentItemPage.Fields[Sitecore.Feature.Library.Templates.TopNav.Fields.UrlCalculator].Value.Trim();
        //Sitecore.Data.Items.Item itemInternal = Sitecore.Context.Database.GetItem(applyCalculator);
        //applyCalculator = itemInternal.Url();
    }

    //Url Syariah must ended with -IB
    if (CurrentItemPage.TemplateID == Sitecore.Feature.Library.Templates.ProductSimpananSyariahPage.ID && currentPath.Substring(currentPath.Length - 3) == "-ib")
    {
        itemSyariah = CurrentItemPage;
        if (Sitecore.Context.Database.GetItem(currentPath.Substring(0, currentPath.Length - 3)) != null)
        {
            itemRegular = Sitecore.Context.Database.GetItem(currentPath.Substring(0, currentPath.Length - 3));
        }
    }
    else
    {
        itemRegular = CurrentItemPage;
        if (Sitecore.Context.Database.GetItem(currentPath + "-ib") != null)
        {
            itemSyariah = Sitecore.Context.Database.GetItem(currentPath + "-ib");
        }
    }

    //Logic Loop AnchorItem
    //aL=#LinkAnchor1;aT=Title Link1|aL=#LinkAnchor2;aT=Title Link2
    if (!string.IsNullOrEmpty(currentPath) && currentPath.Length > 0 && rawAnchorItems != "aL=#LinkAnchor1;aT=Title Link1|aL=#LinkAnchor2;aT=Title Link2")
    {
        string[] anchorItems = rawAnchorItems.Split(new[] { '|' }, StringSplitOptions.RemoveEmptyEntries);
        int counter = 1;
        bool flag = false;
        string tempStringTrue = string.Empty;
        string tempStringFalse = string.Empty;
        foreach (string anchorItem in anchorItems)
        {
            string[] anchorTagItems = anchorItem.Split(new[] { ';' }, StringSplitOptions.RemoveEmptyEntries);
            if (anchorTagItems.Count() == 2)
            {
                string aL = string.Empty;
                string aT = string.Empty;
                foreach (string anchorTagItem in anchorTagItems)
                {
                    if (anchorTagItem.ToLower().Contains("al="))
                    {
                        if (Regex.Split(anchorTagItem, "al=", RegexOptions.IgnoreCase).Count() == 2)
                        {
                            aL = Regex.Split(anchorTagItem, "al=", RegexOptions.IgnoreCase)[1];
                        }
                    }
                    else if (anchorTagItem.ToLower().Contains("at="))
                    {
                        if (Regex.Split(anchorTagItem, "at=", RegexOptions.IgnoreCase).Count() == 2)
                        {
                            aT = Regex.Split(anchorTagItem, "at=", RegexOptions.IgnoreCase)[1];
                        }
                    }
                }
                if (!string.IsNullOrEmpty(aL) && !string.IsNullOrEmpty(aT))
                {
                    if (CurrentItemPage.Url().ToLower() == aL.ToLower())
                    {
                        tagHtmlTopNav += "<a class=active href=\"" + aL + "\">" + aT + "</a>";
                        flag = true;
                    }
                    else if (counter == 1)
                    {
                        tagHtmlTopNav += "$$$$$$$";
                        tempStringTrue = "<a class=active href=\"" + aL + "\">" + aT + "</a>";
                        tempStringFalse = "<a href=\"" + aL + "\">" + aT + "</a>";
                        //tagHtmlTopNav += "<a class=active href=\"" + aL + "\">" + aT + "</a>";
                    }
                    else
                    {
                        tagHtmlTopNav += "<a href=\"" + aL + "\">" + aT + "</a>";
                    }
                }
            }
            counter += 1;
        }
        if (flag)
        {
            tagHtmlTopNav = tagHtmlTopNav.Replace("$$$$$$$", tempStringFalse);
        }
        else
        {
            tagHtmlTopNav = tagHtmlTopNav.Replace("$$$$$$$", tempStringTrue);
        }


    }
}



<div class="m-top-nav js-scroll-fixed">
    <div class="container-fluid">
        <div class="row">
            <div class="col col-xs-2 col-sm-2 col-md-2 col-lg-2">
                <a class="btn btn-outline-primary btn-back addon-reverse goBackPage">
                    <svg xmlns="http://www.w3.org/2000/svg" width="10" height="10">
                        <path id="arrow-left" fill-rule="evenodd" d="M4.436.146a.5.5 0 0 1 .707.706l-3.218 3.22a.252.252 0 0 0 .177.429h7.39c.276 0 .508.22.508.495v.002a.509.509 0 0 1-.508.501h-7.39a.247.247 0 0 0-.177.422L5.158 9.15a.5.5 0 0 1-.706.704L.292 5.698a.998.998 0 0 1 0-1.412L4.437.146" />
                    </svg>
                    @*<span class="text goBackPage">BACK</span>*@
                    <span class="text">BACK</span>
                </a>
            </div>
            @if (isShowCTA == "1")
            {
                if (applyCalculator == "#" || LabelCalculator.Length == 0)
                {
                    <div class="col col-xs-5 col-sm-6 col-md-7 col-lg-8">
                        @if (!string.IsNullOrEmpty(tagHtmlTopNav) || (itemRegular != null && itemSyariah != null))
                        {
                            <div class="top-nav-link">
                                <span class="selected-text"></span>
                                <div class="links">
                                    @if (itemRegular != null && itemSyariah != null)
                                    {
                                        Html.Raw(tagHtmlTopNav.Replace("class=active", ""));
                                        string activeRegular = string.Empty;
                                        string activeSyariah = string.Empty;
                                        if (itemRegular.Url() == CurrentItemPage.Url())
                                        {
                                            activeRegular = "class=active";
                                        }
                                        else if (itemSyariah.Url() == CurrentItemPage.Url())
                                        {
                                            activeSyariah = "class=active";
                                        }
                                        <a @activeSyariah href="@itemSyariah.Url()" data-href="syariah">@Html.Sitecore().Dictionary("/Feature/Top Nav/Syariah", "Edit This Content On Dictionary(/Feature/Top Nav/Syariah)")</a>
                                        <a @activeRegular href="@itemRegular.Url()" data-href="regular">@Html.Sitecore().Dictionary("/Feature/Top Nav/Regular", "Edit This Content On Dictionary(/Feature/Top Nav/Regular)")</a>
                                    }
                                    else
                                    {
                                        @Html.Raw(tagHtmlTopNav)
                                    }
                                </div>
                            </div>
                        }
                    </div>
                    <div class="col col-xs-5 col-sm-4 col-md-3 col-lg-2">
                        @if (string.IsNullOrEmpty(labelButton) && applyNow != "#")
                        {
                            <a class="button-cta apply-now @colorValue" href="@applyNow">@Html.Sitecore().Dictionary("/Feature/Content/List Offer", "Edit This Content On Dictionary(/Feature/Content/List Offer)")</a>
                        }
                        else if (labelButton.ToLower() == "contact us" || labelButton.ToLower() == "hubungi kami")
                        {
                            <a action-type="button" class="button-cta apply-now js-modal-trigger" modal="modal-contact-us">@labelButton</a>
                        }
                        else if (applyNow != "#")
                        {
                            <a class="button-cta apply-now @colorValue" href="@applyNow">@labelButton</a>
                        }
                    </div>
                }
                else
                {
                    <div class="col col-xs-10">
                        @if (string.IsNullOrEmpty(labelButton) && applyNow != "#")
                        {
                            <a class="button-cta apply-now half @colorValue" href="@applyNow">@Html.Sitecore().Dictionary("/Feature/Content/List Offer", "Edit This Content On Dictionary(/Feature/Content/List Offer)")</a>
                        }
                        else if (labelButton.ToLower() == "contact us" || labelButton.ToLower() == "hubungi kami")
                        {
                            <a action-type="button" class="button-cta apply-now half js-modal-trigger" modal="modal-contact-us">@labelButton</a>
                        }
                        else if (applyNow != "#")
                        {
                            <a class="button-cta apply-now half @colorValue" href="@applyNow">@labelButton</a>
                        }
                        <a class="btn btn-outline-primary btn-white apply-now half" href="@applyCalculator">@LabelCalculator</a>

                        @if (!string.IsNullOrEmpty(tagHtmlTopNav) || (itemRegular != null && itemSyariah != null))
                        {

                            <div class="top-nav-link">
                                <span class="selected-text"></span>
                                <div class="links">

                                    @if (itemRegular != null && itemSyariah != null)
                                    {
                                        Html.Raw(tagHtmlTopNav.Replace("class=active", ""));
                                        string activeRegular = string.Empty;
                                        string activeSyariah = string.Empty;
                                        if (itemRegular.Url() == CurrentItemPage.Url())
                                        {
                                            activeRegular = "class=active";
                                        }
                                        else if (itemSyariah.Url() == CurrentItemPage.Url())
                                        {
                                            activeSyariah = "class=active";
                                        }
                                        <a @activeSyariah href="@itemSyariah.Url()" data-href="syariah">@Html.Sitecore().Dictionary("/Feature/Top Nav/Syariah", "Edit This Content On Dictionary(/Feature/Top Nav/Syariah)")</a>
                                        <a @activeRegular href="@itemRegular.Url()" data-href="regular">@Html.Sitecore().Dictionary("/Feature/Top Nav/Regular", "Edit This Content On Dictionary(/Feature/Top Nav/Regular)")</a>
                                    }
                                    else
                                    {
                                        @Html.Raw(tagHtmlTopNav)
                                    }

                                </div>
                            </div>
                        }
                    </div>
                }
            }
            else
            {
                <div class="col-xs-10 col-sm-10 col-md-10 col-lg-10">
                    @if (!string.IsNullOrEmpty(tagHtmlTopNav) || (itemRegular != null && itemSyariah != null))
                    {
                        <div class="top-nav-link">
                            <span class="selected-text"></span>
                            <div class="links">
                                @if (itemRegular != null && itemSyariah != null)
                                {
                                    Html.Raw(tagHtmlTopNav.Replace("class=active", ""));
                                    string activeRegular = string.Empty;
                                    string activeSyariah = string.Empty;
                                    if (itemRegular.Url() == CurrentItemPage.Url())
                                    {
                                        activeRegular = "class=active";
                                    }
                                    else if (itemSyariah.Url() == CurrentItemPage.Url())
                                    {
                                        activeSyariah = "class=active";
                                    }
                                    <a @activeSyariah href="@itemSyariah.Url()" data-href="syariah">@Html.Sitecore().Dictionary("/Feature/Top Nav/Syariah", "Edit This Content On Dictionary(/Feature/Top Nav/Syariah)")</a>
                                    <a @activeRegular href="@itemRegular.Url()" data-href="regular">@Html.Sitecore().Dictionary("/Feature/Top Nav/Regular", "Edit This Content On Dictionary(/Feature/Top Nav/Regular)")</a>
                                }
                                else
                                {
                                    @Html.Raw(tagHtmlTopNav)
                                }
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>
