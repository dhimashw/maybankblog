@using Sitecore.Mvc
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Feature.Library;
@using Sitecore.Data.Items;
@using Sitecore.Foundation.Alerts;
@using Sitecore.Foundation.Alerts.Extensions;
@using Sitecore.Mvc.Presentation
@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Feature.Library.Helper
@model Sitecore.Mvc.Presentation.RenderingModel
@if (!Model?.Item?.IsDerived(Sitecore.Feature.Library.Templates.BannerCreditCard.ID) ?? true)
{
    @Html.PageEditorInfo(AlertTexts.InvalidDataSourceTemplate(Sitecore.Feature.Library.Templates.BannerCreditCard.ID), AlertTexts.InvalidDataSourceTemplateFriendlyMessage, Model.Item?.ID, Model.Rendering.Item?.ID)
    return;
}
@if (Model.Item != null && Model.Item.TemplateID == Sitecore.Feature.Library.Templates.BannerCreditCard.ID)
{
    //string TitleCTA = string.IsNullOrEmpty(RenderingContext.Current.Rendering.Parameters["Title"]) == true ? Html.Sitecore().Dictionary("/Feature/Content/Banner", "Edit This Content On Dictionary(/Feature/Content/Banner)") : RenderingContext.Current.Rendering.Parameters["Title"];
    string url = "#";
    string imageUrl = string.Format("style=\"background-image:url({0});\"", Variables._defaultImageBanner);
    string targetType = "_blank";
    var ButtonColor = string.IsNullOrEmpty(Model.Item.Fields[Sitecore.Feature.Library.Templates.BaseField.Fields.ButtonColor].Value) ? "btn btn-tertiary addon" : Sitecore.Context.Database.GetItem(Model.Item.Fields[Sitecore.Feature.Library.Templates.BaseField.Fields.ButtonColor].Value).Fields[Sitecore.Feature.Library.Templates.BaseField.Fields.stringTitle].ToString();

    if (Model.Item.LinkFieldUrl(Sitecore.Feature.Library.Templates.Banner.Fields.Url) != null)
    {
        Sitecore.Data.Fields.LinkField _link = Model.Item.Fields[Sitecore.Feature.Library.Templates.Banner.Fields.Url];
        url = Sitecore.Feature.Library.Helper.Core.getGeneralLink(_link);
        //url = Model.Item.LinkFieldUrl(Sitecore.Feature.Library.Templates.Banner.Fields.Url);
        targetType = Model.Item.LinkFieldOptions(Sitecore.Feature.Library.Templates.Banner.Fields.Url, LinkFieldOption.Target);
    }

    if (Model.Item.ImageUrl(Sitecore.Feature.Library.Templates.Banner.Fields.Image) != null)
    {
        imageUrl = string.Format("style=background-image:url({0});", Model.Item.ImageUrl(Sitecore.Feature.Library.Templates.Banner.Fields.Image));
    }

    <div class="section gray no-pad-top no-pad-bot m-info-box banner-style" @imageUrl>
        <div class="container">
            <div class="row">
                <div class="col-xs-12 col-md-6 col-f-right">
                    <div class="content full banner-img">
                        @Html.Sitecore().ImageField(Sitecore.Feature.Library.Templates.BannerCreditCard.Fields.ImageResponsive, Model.Item, cssClass: "img-responsive")
                    </div>
                </div>
                <div class="col-xs-12 col-md-6">
                    <div class="content banner-text">
                        <h1>@Html.Sitecore().Field(Sitecore.Feature.Library.Templates.Banner.Fields.stringBannerTitle, Model.Item)</h1>
                        <p>@Html.Sitecore().Field(Sitecore.Feature.Library.Templates.Banner.Fields.stringBannerDescription, Model.Item)</p>
                        <a class="@ButtonColor" href="@url" target="@targetType">
                            @Html.Sitecore().Field(Sitecore.Feature.Library.Templates.BaseField.Fields.ButtonLabel,Model.Item)
                            <img src="../../assets/img/icons/arrow-right/arrow-right-363-big-black@2x.png" alt="" />
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

