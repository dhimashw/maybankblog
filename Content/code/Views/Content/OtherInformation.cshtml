@using Sitecore.Mvc
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Feature.Library;
@using Sitecore.Mvc.Presentation
@using Sitecore.Foundation.Alerts
@using Sitecore.Foundation.Alerts.Extensions
@model Sitecore.Mvc.Presentation.RenderingModel
@if (!Model?.Item?.IsDerived(Sitecore.Feature.Library.Templates.ImageDescription.ID) ?? true)
{
    @Html.PageEditorInfo(AlertTexts.InvalidDataSourceTemplate(Sitecore.Feature.Library.Templates.ImageDescription.ID), AlertTexts.InvalidDataSourceTemplateFriendlyMessage, Model.Item?.ID, Model.Rendering.Item?.ID)
    return;
}
@{
    var item = Model.Item;
    //var url = @item.LinkFieldUrl(Sitecore.Feature.Library.Templates.GeneralUrl.Fields.Url).ToString() != null ? @item.LinkFieldUrl(Sitecore.Feature.Library.Templates.GeneralUrl.Fields.Url).ToString() : "#";
    Sitecore.Data.Fields.LinkField _link = Model.Item.Fields[Sitecore.Feature.Library.Templates.GeneralUrl.Fields.Url];
    string url = Sitecore.Feature.Library.Helper.Core.getGeneralLink(_link);
    var targetType = @item.LinkFieldOptions(Sitecore.Feature.Library.Templates.GeneralUrl.Fields.Url, LinkFieldOption.Target);
    string AnchorItemID = RenderingContext.Current.Rendering.Parameters["ID"] != null ? RenderingContext.Current.Rendering.Parameters["ID"].Trim() : "";
}
<div class="section bordered-top m-info-box" id="@AnchorItemID">
    <div class="container">
        <div class="row">
            <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                <div class="heading">
                    <h1>@Html.Sitecore().Field(Sitecore.Feature.Library.Templates.GeneralHeadingAndSubheading.Fields.Heading)</h1>
                </div>
            </div>
            <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12">
                <div class="row">
                    @Html.Sitecore().Field(Sitecore.Feature.Library.Templates.Text.Fields.TextContent)
                </div>
            </div>
        </div>
    </div>
</div>